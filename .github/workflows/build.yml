name: Build and package

on: [push, pull_request]

env:
  buildDir: ${{ github.workspace }}/build/

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: windows-2019
            triplet: x64-windows
            distributionTool:
                name: DistributionTool.exe
                url: https://developer.elgato.com/documentation/stream-deck/distributiontool/DistributionToolWindows.zip
                pathInArchive: DistributionTool.exe
          - os: macos-10.15
            triplet: x64-osx
            distributionTool:
                name: DistributionTool
                url: https://developer.elgato.com/documentation/stream-deck/distributiontool/DistributionToolMac.zip
                pathInArchive: DistributionTool

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v2
        with:
            submodules: 'recursive'

      - uses: lukka/get-cmake@latest

      - name: "Obtain Distribution tool"
        uses: engineerd/configurator@v0.0.6
        with:
            name: ${{ matrix.distributionTool.name }}
            url: ${{ matrix.distributionTool.url }}
            pathInArchive: ${{ matrix.distributionTool.pathInArchive }}


      # Restore from cache the previously built ports. If a "cache miss"
      # occurs, then vcpkg is bootstrapped. Since a the vcpkg.json is
      # being used later on to install the packages when run-cmake runs,
      # no packages are installed at this time and the input 'setupOnly:true
      # is mandatory.
      - name: Restore artifacts / setup vcpkg
        uses: lukka/run-vcpkg@v7
        with:
          # Just install vcpkg for now, do not install any ports
          # in this step yet.
          setupOnly: true
          vcpkgGitCommitId: 3166bcc15b156b57667d9e573fba9775ceef3eb1
          # Since the cache must be invalidated when content of the
          # vcpkg.json file changes, let's compute its hash and append
          # this to the computed cache's key.
          appendedCacheKey: ${{ hashFiles( '**/vcpkg.json' ) }}
          vcpkgTriplet: ${{ matrix.triplet }}
          # Ensure the vcpkg artifacts are cached, they are generated in the
          # 'CMAKE_BINARY_DIR/vcpkg_installed' directory.
          additionalCachedPaths: ${{ env.buildDir }}/vcpkg_installed

      - name: Build
        uses: lukka/run-cmake@v3
        with:
          cmakeListsOrSettingsJson: CMakeListsTxtAdvanced
          cmakeListsTxtPath: '${{ github.workspace }}/CMakeLists.txt'
          buildDirectory: ${{ env.buildDir }}
          # This input tells run-cmake to consume the vcpkg.cmake toolchain
          # file set by run-vcpkg.
          useVcpkgToolchainFile: true
          buildWithCMake: true
          cmakeAppendedArgs: -Denable-packaging=ON

      - name: Package
        run: cd "${{ env.buildDir }}"; cmake --build . --target package
